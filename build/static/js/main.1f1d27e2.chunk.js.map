{"version":3,"sources":["lib/Axios.js","redux/actions/authAction.js","lib/setAuthToken.js","redux/actionTypes/actionTypes.js","Factory/Spinner/Spinner.js","Components/Navbar/Navbar.js","Components/PrivateRoute/PrivateRoute.js","App.js","serviceWorker.js","redux/reducers/authReducerHelpers.js","redux/reducers/authReducer.js","redux/reducers/handleMessageReducer.js","redux/reducers/talkReducer.js","redux/reducers/index.js","redux/store/store.js","lib/checkTokenAuth.js","index.js"],"names":["Axios","axios","create","baseURL","timeout","signin","userInfo","dispatch","a","post","success","token","data","setAuthToken","localStorage","setItem","authUserSignin","Promise","resolve","handleErrorSignup","response","message","reject","type","AUTH_USER_SIGN_IN_SUCCESSFUL","payload","signup","authUserSuccessful","AUTH_USER_SUCCESSFUL","AUTH_USER_FAILURE","handleLogout","removeItem","AUTH_USER_LOGOUT","defaults","headers","common","CREATE_TALK","ERROR_CREATE_TALK","GET_ALL_TALKS","GET_TALK_BY_ID","GET_ALL_USER_TALKS","DELETE_USER_TALK_BY_ID","Spinner","className","styles","rightToolbar","marginLeft","marginRight","navLinkStyle","textDecoration","color","signupAndSignin","activeLinks","Navbar","navigation","this","props","authUser","isAuthenticated","exact","to","classes","join","activeStyle","onClick","AppBar","position","Toolbar","Component","connect","state","withStyles","component","rest","render","Signin","React","lazy","Home","Signup","CreateTalk","SeeTalk","UserProfile","NotFound","App","path","Boolean","window","location","hostname","match","jwtDecodeTokenAndSetUser","oldState","decoded","jwtDecode","newState","stateHelperFunc","user","email","username","id","initialState","serverMessage","messageStyle","fontColorStyle","dynamicClassName","talks","talk","userTalks","combineReducers","action","newUserTalkArray","filter","_id","newTalksArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","jwtToken","getItem","currentTime","Date","now","exp","href","checkTokenAuth","Application","Suspense","fallback","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f1d27e2.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst Axios = axios.create({\n    baseURL: process.env.NODE_ENV === 'development' ? 'http://localhost:3001/' : '',\n    timeout: 50000\n})\n\nexport default Axios;","import { AUTH_USER_SUCCESSFUL, \n         AUTH_USER_FAILURE, \n         AUTH_USER_SIGN_IN_SUCCESSFUL, \n         AUTH_USER_LOGOUT\n        } from '../actionTypes/actionTypes';\nimport Axios from '../../lib/Axios';\nimport setAuthToken from '../../lib/setAuthToken';\n\nexport const signin = (userInfo) => async dispatch => {\n    try {\n        let success = await Axios.post('/users/sign-in', userInfo);\n        const { token } = success.data;\n        setAuthToken(token);\n        localStorage.setItem('jwtToken', token);\n        dispatch(authUserSignin(token));\n        return Promise.resolve('Signin successfully');\n\n    } catch (error) {\n        dispatch(handleErrorSignup(error.response.data.message))\n        return Promise.reject(error);\n    }\n}\n\nexport const authUserSignin = (token) => dispatch => {\n    dispatch({\n        type: AUTH_USER_SIGN_IN_SUCCESSFUL,\n        payload: token\n    })\n}\n\nexport const signup = (userInfo) => async dispatch => {\n    try {\n        let success = await Axios.post('/users/sign-up', userInfo);\n      \n        dispatch(authUserSuccessful(success.data.message))\n        return Promise.resolve(success.data.message);\n    } catch (error) {\n        dispatch(handleErrorSignup(error.response.data.message))\n        return Promise.reject(error);\n    }\n}\n\nexport const authUserSuccessful = (message) => dispatch => {\n    dispatch({\n        type: AUTH_USER_SUCCESSFUL,\n        payload: message\n    })\n}\n\nexport const handleErrorSignup = (message) => dispatch => {\n    dispatch({\n        type: AUTH_USER_FAILURE,\n        payload: message\n    })\n}\n\nexport const handleLogout = () => dispatch => {\n\n    localStorage.removeItem('jwtToken');\n    dispatch({\n        type: AUTH_USER_LOGOUT\n    })\n\n}\n","import Axios from './Axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        Axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n        delete Axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","export const AUTH_USER_SUCCESSFUL = 'AUTH_USER_SUCCESSFUL';\nexport const AUTH_USER_FAILURE = 'AUTH_USER_FAILURE';\n\nexport const AUTH_USER_LOGOUT = 'AUTH_USER_LOGOUT';\n\nexport const AUTH_USER_SIGN_IN_SUCCESSFUL = 'AUTH_USER_SIGN_IN_SUCCESSFUL';\n\nexport const CREATE_TALK = 'CREATE_TALK';\n\nexport const ERROR_CREATE_TALK = 'ERROR_CREATE_TALK';\n\nexport const GET_ALL_TALKS = 'GET_ALL_TALKS'\n\nexport const GET_TALK_BY_ID = 'GET_TALK_BY_ID';\n\nexport const GET_ALL_USER_TALKS = 'GET_ALL_USER_TALKS';\n\nexport const DELETE_USER_TALK_BY_ID = 'DELETE_USER_TALK_BY_ID';","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => (\n    <div className='loader'>Loading...</div>\n);\n\nexport default Spinner;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { NavLink } from 'react-router-dom';\nimport { handleLogout } from '../../redux/actions/authAction';\n\nconst styles = {\n    rightToolbar: {\n        marginLeft: 'auto',\n        marginRight: -12\n    },\n    navLinkStyle: {\n        textDecoration: 'none',\n        color: 'white'\n    },\n    signupAndSignin: {\n        marginLeft: '10px'\n    },\n    activeLinks: {\n        color: 'white',\n        textDecoration: 'underline white'\n    }\n}\n\nclass Navbar extends Component {\n\n    render() {\n        \n        let navigation = null;\n\n        if (this.props.authUser.isAuthenticated) {\n            navigation = (\n                <>\n                    <NavLink\n                        exact\n                        to='/user-profile'\n                        className={[this.props.classes.navLinkStyle, \n                                    this.props.classes.signupAndSignin].join(' ')\n                                }\n                        activeStyle={{color: 'white', textDecoration: 'underline white'}}\n                    >\n                        Hamster\n                    </NavLink>\n\n                    <NavLink\n                        exact\n                        to='/create-talk'\n                        className={[this.props.classes.navLinkStyle, \n                                    this.props.classes.signupAndSignin].join(' ')\n                                }\n                        activeStyle={{color: 'white', textDecoration: 'underline white'}}\n                    >\n                        Create Talk\n                    </NavLink>\n\n                    <NavLink\n                        exact\n                        to='/'\n                        className={[this.props.classes.navLinkStyle, \n                            this.props.classes.signupAndSignin].join(' ')\n                        }\n                        onClick={() => this.props.handleLogout()}\n                    >\n                        Logout\n                    </NavLink>\n                </>\n            )\n        } else {\n            navigation = (\n                <>\n                    <NavLink \n                        exact \n                        className={[this.props.classes.navLinkStyle, this.props.classes.signupAndSignin].join(' ')}\n                        activeStyle={styles.activeLinks}\n                        to='/sign-up'>\n                            Sign up\n                    </NavLink>\n\n                    <NavLink \n                        exact \n                        className={[this.props.classes.navLinkStyle, this.props.classes.signupAndSignin].join(' ')}\n                        activeStyle={styles.activeLinks}\n                        to='/sign-in'>\n                            Sign in\n                    </NavLink>\n\n                </>\n            )\n        }\n\n        return (\n           <AppBar position='static'>\n               <Toolbar>\n                   <NavLink \n                     exact\n                     to='/'\n                     className={this.props.classes.navLinkStyle}\n                     activeStyle={styles.activeLinks}\n                     >Talk That Talk</NavLink>\n\n                     <section className={this.props.classes.rightToolbar}>\n                        \n                        {navigation}\n\n                     </section>\n               </Toolbar>\n           </AppBar>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        authUser: state.authUser\n    }\n}\n\nexport default connect(mapStateToProps, { handleLogout })(withStyles(styles)(Navbar));\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ component: Component, authUser, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      authUser.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/sign-in\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  authUser: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authUser: state.authUser\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from 'react'\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport PrivateRoute from './Components/PrivateRoute/PrivateRoute';\n// import CreateTalk from './Components/CreateTalk/CreateTalk';\n\nconst Signin = React.lazy(() => import('./Components/Signin/Signin'));\nconst Home = React.lazy(() => import('./Components/Home/Home'));\nconst Signup = React.lazy(() => import('./Components/Signup/Signup'));\nconst CreateTalk = React.lazy(() => import('./Components/CreateTalk/CreateTalk'));\nconst SeeTalk = React.lazy(() => import('./Components/SeeTalk/SeeTalk'));\n\nconst UserProfile = React.lazy(() => import('./Components/UserProfile/UserProfile'));\nconst NotFound = React.lazy(() => import('./Components/NotFound/NotFound'));\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <>  \n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/sign-up' component={Signup} />\n          <Route exact path='/sign-in' component={Signin} />\n\n          <PrivateRoute exact path='/create-talk' component={CreateTalk} />\n          <PrivateRoute exact path='/see-talk/:id' component={SeeTalk} />\n          <PrivateRoute exact path='/user-profile' component={UserProfile} />\n          <Route path=\"\" component={NotFound} />\n        </Switch>\n      </>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import jwtDecode from 'jwt-decode';\n\nconst stateHelperFunc = (oldState, newState) => {\n    return {\n        ...oldState, \n        ...newState\n    }\n}\n\nexport const jwtDecodeTokenAndSetUser = (oldState, token) => {\n    let decoded = jwtDecode(token);\n\n    return stateHelperFunc(oldState, {\n        isAuthenticated: true, \n        user: {\n            email: decoded.email, \n            username: decoded.username,\n            id: decoded.id\n        }\n    })\n}","import { AUTH_USER_SIGN_IN_SUCCESSFUL, AUTH_USER_LOGOUT } from '../actionTypes/actionTypes';\nimport { jwtDecodeTokenAndSetUser } from './authReducerHelpers';\n\nconst initialState = {\n    isAuthenticated: false, \n    user: null\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case AUTH_USER_SIGN_IN_SUCCESSFUL: \n           return jwtDecodeTokenAndSetUser(state, action.payload);\n        case AUTH_USER_LOGOUT:\n            return {\n                isAuthenticated: false,\n                user: null\n            }\n        default: \n            return state;\n    }\n}","import { AUTH_USER_SUCCESSFUL, AUTH_USER_FAILURE } from '../actionTypes/actionTypes';\n\nconst initialState = {\n    serverMessage: null,\n    messageStyle: {\n        fontColorStyle: '',\n        dynamicClassName: ''\n    }\n}\n\nexport default function(state=initialState, action) {\n\n    switch (action.type) {\n        case AUTH_USER_SUCCESSFUL: \n            return {\n                serverMessage: action.payload,\n                messageStyle: {\n                    fontColorStyle: '#3F51B5',\n                    dynamicClassName: 'App'\n                }\n            }\n        \n        case AUTH_USER_FAILURE: \n            return {\n                serverMessage: action.payload,\n                messageStyle: {\n                    fontColorStyle: '#f44336',\n                    dynamicClassName: 'App'\n                }\n            }\n\n        default:\n            return state;    \n    }\n\n}\n","import { CREATE_TALK, ERROR_CREATE_TALK, GET_ALL_TALKS, GET_TALK_BY_ID, GET_ALL_USER_TALKS, DELETE_USER_TALK_BY_ID } from '../actionTypes/actionTypes';\n\nconst initialState = {\n   talks: [],\n   message: null,\n   talk: null,\n   userTalks: []\n };\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n\n    case DELETE_USER_TALK_BY_ID: \n      let newUserTalkArray = state.userTalks.filter(talk => talk._id !== action.id)\n      return {\n        ...state, \n        userTalks: newUserTalkArray\n      }\n\n    case GET_ALL_USER_TALKS:\n      return {\n        ...state, \n        userTalks: [...action.payload]\n      }\n\n    case GET_ALL_TALKS: \n      return {\n        ...state, \n        talks: [...action.payload]\n      }\n\n    case CREATE_TALK:\n      let newTalksArray = [...state.talks, action.payload];\n      return {\n       ...state,\n        talks: newTalksArray\n      };\n\n    case GET_TALK_BY_ID: \n    \n      return {\n        ...state, \n        talk: action.payload\n      }  \n    case ERROR_CREATE_TALK:\n      return {\n        ...state,\n        message: action.payload\n      }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport handleMessageReducer from './handleMessageReducer';\nimport talkReducer from './talkReducer';\n\nexport default combineReducers({\n    authUser: authReducer,\n    message: handleMessageReducer,\n    talk: talkReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n)\n\nexport default store;","import jwtDecode from 'jwt-decode';\nimport { authUserSignin, handleLogout } from '../redux/actions/authAction';\nimport setAuthToken from './setAuthToken';\nconst checkTokenAuth = (store) => {\n\n    let jwtToken = localStorage.getItem('jwtToken');\n    let decoded;\n\n    if (jwtToken) {\n        setAuthToken(jwtToken);\n        decoded = jwtDecode(jwtToken);\n        store.dispatch(authUserSignin(jwtToken));\n        const currentTime = Date.now() / 1000;\n\n        if (decoded.exp < currentTime) {\n            store.dispatch(handleLogout());\n            window.location.href = '/sign-in';\n            //logout\n            //redirect\n        }\n    }\n    return;\n}\n\nexport default checkTokenAuth;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store/store';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Spinner from './Factory/Spinner/Spinner';\nimport checkTokenAuth from './lib/checkTokenAuth';\n\ncheckTokenAuth(store);\n\nconst Application = () => {\n    return (\n        <Provider store={store}>\n            <Router>\n                <React.Suspense fallback={<Spinner />}>\n                    <App store={store}/>\n                </React.Suspense>\n            </Router>\n        </Provider>\n    )\n}\n\nReactDOM.render(<Application />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}